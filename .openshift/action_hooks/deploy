#!/bin/bash
# This deploy hook gets executed after dependencies are resolved and the
# build hook has been run but before the application has been started back
# up again.  This script gets executed directly, so it could be python, php,
# ruby, etc.
# Confirm database exists, if not create it
RETRY=60
while [ $RETRY -gt 0 ] ; do
    #reload env variables
    for env_var in  $OPENSHIFT_HOMEDIR/.env/*
    do
        . $env_var
    done

    #check for mysql db
    if [ -n "$OPENSHIFT_MYSQL_DB_HOST" ]
    then
        echo "Mysql database server found at $OPENSHIFT_MYSQL_DB_HOST. initializing..."
        sleep 5
        break
    fi

    #check for postgresql db
    if [ -n "$OPENSHIFT_POSTGRESQL_DB_HOST" ]
    then
        echo "Postgresql database server found at $OPENSHIFT_POSTGRESQL_DB_HOST. initializing..."
        sleep 5
        break
    fi

    sleep 1
    RETRY=$(( $RETRY - 1 ))
done


if [ -f $OPENSHIFT_DATA_DIR/.mysql_schema_deployed ]; then
  echo "Mysql already deployed!"
elif [ -n "$OPENSHIFT_MYSQL_DB_HOST" ]; then
  echo
  echo "Deploying mysql schema..."
  /usr/bin/mysql -u "$OPENSHIFT_MYSQL_DB_USERNAME" --password="$OPENSHIFT_MYSQL_DB_PASSWORD" -h "$OPENSHIFT_MYSQL_DB_HOST" -P "$OPENSHIFT_MYSQL_DB_PORT" -e "create table test ( id INT, data VARCHAR(100) );" "$OPENSHIFT_APP_NAME" && touch $OPENSHIFT_DATA_DIR/.mysql_schema_deployed
fi

if [ -f $OPENSHIFT_DATA_DIR/.postgresql_schema_deployed ]; then 
  echo "Postgresql already deployed!"
elif [ -n "$OPENSHIFT_POSTGRESQL_DB_HOST" ]; then
  echo
  echo "Deploying postgresql schema..."
  /usr/bin/psql -h$OPENSHIFT_POSTGRESQL_DB_HOST -U$OPENSHIFT_POSTGRESQL_DB_USERNAME $WOPENSHIFT_POSTGRESQL_DB_PASSWORD -c "create table test ( id INT, data VARCHAR(100) );" $OPENSHIFT_APP_NAME && touch $OPENSHIFT_DATA_DIR/.postgresql_schema_deployed
fi